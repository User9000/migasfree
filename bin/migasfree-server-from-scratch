#!/bin/bash

. $(cd $(dirname $0); pwd -P)/migasfree-server-functions

# main process

verify_dependencies
if [ $? -ne 0 ]
then
    exit 1
fi

read -e -p "Have you checked migasfree.settings before start from scratch? This procedure remove existing data in app. [y/n] " _RESPONSE

if [ -z "$_RESPONSE" -o "$_RESPONSE" != 'y' ]
then
    echo "Aborted process. Review migasfree.settings and try again."
    exit 2
fi

export DJANGO_SETTINGS_MODULE="migasfree.settings.production"

_MIGASFREE_PATH=$(python -c "import os; import migasfree; print os.path.dirname(os.path.abspath(migasfree.__file__))")
_REPO_PATH=$(python -c "import migasfree.settings; print migasfree.settings.MIGASFREE_REPO_DIR")
_DB_PATH=$(python -c "import migasfree.settings; print migasfree.settings.MIGASFREE_DB_DIR")
_DB_NAME=$(python -c "import migasfree.settings; print migasfree.settings.DATABASES['default']['NAME']")
_KEYS_PATH=$(python -c "import migasfree.settings; print migasfree.settings.MIGASFREE_KEYS_DIR")
_TMP_DIR=$(python -c "import migasfree.settings; print migasfree.settings.MIGASFREE_TMP_DIR")

_PWD=$(dirname $(readlink -f $0))

export _USER_WEB_SERVICE=$(get_user_web_service)

_IS_DB_SQLITE=$(python -c "from migasfree.server.functions import is_db_sqlite; print is_db_sqlite()")

if [ -z "$_USER_WEB_SERVICE" ]
then
    echo "user $_WEB_SERVICE not found. Service is running?"
    exit 3
fi

migasfree-server-config-webserver

cd $_MIGASFREE_PATH

remove_old_data

migasfree-server-create-database

create_server_keys
if [ $? -ne 0 ]
then
    exit 6
fi

set_permissions

test_app
if [ $? -ne 0 ]
then
    exit 7
fi

echo
echo "migasfree server operative. Test it at http://localhost/"
echo

exit 0
