#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import django.core.management
import migasfree
from migasfree import settings
django.core.management.setup_environ(settings)
from migasfree.server.fixtures import create_registers
from migasfree.server.fixtures import sequence_reset
from migasfree.server.fixtures import run

def create_db():
    DB = settings.DATABASES.get('default')
    if DB.get('ENGINE') == \
        'django.db.backends.postgresql_psycopg2':
        settings.DATABASES.get('default').get('ENGINE')

        _NAME = DB.get('NAME')
        _USER = DB.get('USER')
        _PASSWORD = DB.get('PASSWORD')
        _HOST = ""
        if DB.get('HOST'):
            _HOST = " --host=%s " % DB.get('HOST')

        _PORT = ""
        if DB.get('PORT'):
            _PORT = " --port=%s " % DB.get('PORT')

        # DROP DATABASE
        cmd_linux = "echo 'DROP DATABASE %s;' | su postgres -c psql -" \
            % (_NAME,)
        (out, err) = run(cmd_linux)

        # CREATE DATABASE
        cmd_linux = "su postgres -c 'PGPASSWORD=%s createdb %s %s -w -E utf8 -O %s %s'" % \
            (_PASSWORD, _HOST, _PORT, _USER, _NAME)
        (out, err) = run(cmd_linux)

    else:
        exit(1, "Sorry. No soported this backend: %s" % DB.get("ENGINE"))


def create_tables():
    django.core.management.call_command('syncdb', interactive=False,verbosity=0)
    django.core.management.call_command('migrate', 'server',verbosity=0)

def main():
    # Check user is root
    (out, err) = run("whoami")
    if out != "root\n":
        print "You must be root!"
        exit(1)
    print "Creating Database..."
    create_db()
    create_tables()
    create_registers()
    sequence_reset()
    print "Created Database: %s" % settings.DATABASES.get('default').get("NAME")

if  __name__ == '__main__':
    os.environ['DJANGO_COLORS'] = 'nocolor'
    main()
