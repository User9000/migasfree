[
    {
        "pk": 10,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "import os\nfrom migasfree.settings import MIGASFREE_REPO_DIR\nurl = '/server_messages/'\nalert = 'info'\ntarget = 'server'\nresult=0\nmsg=''\nif os.path.exists(MIGASFREE_REPO_DIR):\n    for _version in os.listdir(MIGASFREE_REPO_DIR):\n        _repos = os.path.join(MIGASFREE_REPO_DIR, _version, 'TMP/REPOSITORIES/dists')\n        if os.path.exists(_repos):\n            for _repo in os.listdir(_repos):\n                result=result+1\n                msg=msg+'%s en %s.' % (_repo, _version)\nmsg = 'Creating %s repositories:%s' % ( result, msg)",
            "name": "Creating Repositories",
            "alert": true,
            "description": ""
        }
    },
    {
        "pk": 8,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from django.conf import settings\nfrom datetime import datetime, timedelta\nfrom migasfree.server.models import MessageServer\nurl = '/server_messages/'\nmsg = 'Message Server Delayed' \nt = datetime.now() - timedelta(0, settings.MIGASFREE_SECONDS_MESSAGE_ALERT)\nresult = MessageServer.objects.filter(date__lt=t).count()\nalert = 'warning'\ntarget = 'server'",
            "name": "Server Messages Delayed",
            "alert": true,
            "description": ""
        }
    },
    {
        "pk": 7,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from django.conf import settings\nfrom datetime import datetime, timedelta\nfrom migasfree.server.models import MessageServer\nurl = '/server_messages/'\nmsg = 'Server Messages'\nt = datetime.now() - timedelta(0, settings.MIGASFREE_SECONDS_MESSAGE_ALERT)\nresult = MessageServer.objects.filter(date__gte=t).count()\nalert = 'warning'\ntarget = 'server'",
            "name": "Server Messages",
            "alert": false,
            "description": "Server Messages"
        }
    },
    {
        "pk": 6,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from django.conf import settings\nfrom datetime import datetime, timedelta\nfrom migasfree.server.models import Message\nurl = '/computer_messages/'\nmsg = 'Computer delayed' \nt = datetime.now() - timedelta(0, settings.MIGASFREE_SECONDS_MESSAGE_ALERT)\nresult = Message.objects.filter(date__lt=t).count()\nalert = 'warning'\ntarget = 'computer'\n",
            "name": "Computer delayed",
            "alert": true,
            "description": "Check how many computers are delayed"
        }
    },
    {
        "pk": 3,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from migasfree.server.models import Package\nfrom django.db.models import Q\nresult = Package.user_version.version(0).filter(Q(repository__id__exact=None)).count()\nurl = '/query/5/'\nalert = 'warning'\nmsg = 'Package/Set orphan'\ntarget = 'server'\n",
            "name": "Package/Set orphan",
            "alert": true,
            "description": "Packages that have not been assigned to any repository"
        }
    },
    {
        "pk": 9,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from migasfree.server.models import Notification\nresult = Notification.objects.filter(checked__exact=0).count()\nurl = '/admin/server/notification/?checked__exact=0'\nalert = 'warning'\nmsg = 'Notifications to check'\ntarget = 'server'\n",
            "name": "Notifications to check",
            "alert": true,
            "description": "Server Notifications that must be checked"
        }
    },
    {
        "pk": 5,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from django.conf import settings\nfrom datetime import datetime, timedelta\nfrom migasfree.server.models import Message\nurl = '/computer_messages/'\nmsg = 'Computer updating now'\nt = datetime.now() - timedelta(0, settings.MIGASFREE_SECONDS_MESSAGE_ALERT)\nresult = Message.objects.filter(date__gt=t).count()\nalert = 'info'\ntarget = 'computer'\n",
            "name": "Computer updating now",
            "alert": false,
            "description": "Check how many computers are being updated right now"
        }
    },
    {
        "pk": 2,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from migasfree.server.models import Fault\nfrom django.db.models import Q\nresult = Fault.objects.filter(checked__exact=0).filter(Q(faultdef__users__id__in=[request.user.id,]) | Q(faultdef__users=None)).count()\nurl = '/admin/server/fault/?checked__exact=0&user=me'\nalert = 'danger'\nmsg = 'Faults to check'\ntarget = 'computer'\n",
            "name": "Faults to check",
            "alert": true,
            "description": "Faults not checked. You must check fault when fault is solved"
        }
    },
    {
        "pk": 1,
        "model": "server.checking",
        "fields": {
            "active": true,
            "code": "from migasfree.server.models import Error\nresult = Error.objects.filter(checked__exact=0).count()\nurl = '/admin/server/error/?checked__exact=0'\nalert = 'danger'\nmsg = 'Errors to check'\ntarget = 'computer'\n",
            "name": "Errors to check",
            "alert": true,
            "description": "Errors not checked. You must check error when error is solved"
        }
    }
]
