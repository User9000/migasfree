[
    {
        "pk": 1,
        "model": "server.query",
        "fields": {
            "code": "from django.utils.translation import ugettext_lazy as _\nfrom migasfree.server.models import Query\nif parameters['id'] == '':\n    query = Query.objects.all()\nelse:\n    query = Query.objects.filter(id=parameters['id'])\n    fields = ('name', 'description', 'code', 'parameters')\n    titles = (_('Name'), _('Description'), _('Code'), _('Parameters'))\n",
            "name": "Queries...",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    from django import forms\n    class myForm(ParametersForm):\n        id = forms.CharField()\n    return myForm\n",
            "description": "Query List"
        }
    },
    {
        "pk": 2,
        "model": "server.query",
        "fields": {
            "code": "from django.utils.translation import ugettext_lazy as _\nfrom migasfree.server.models import Package\nquery = Package.objects.filter(name__contains=parameters['name'])\nfields = ('link', 'store')\ntitles = (_('Name'), _('Store'))\n",
            "name": "Packages/Sets...",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    from django import forms\n    class myForm(ParametersForm):\n        name = forms.CharField()\n    return myForm\n",
            "description": "Package/Set List"
        }
    },
    {
        "pk": 3,
        "model": "server.query",
        "fields": {
            "code": "from migasfree.server.models import Login, Computer, Property,Version\nfrom django.db.models import Count\nquery = Login.objects.select_related('user', 'computer').filter(computer__status__in=Computer.PRODUCTIVE_STATUS)\nif parameters['value'] != '':\n    if str(parameters['exact']) == 'True':\n        query = query.filter(attributes__property_att__id=parameters['property_att'],attributes__value=parameters['value'])\n        fld = 'attributes.filter(property_att__id=parameters[\"property_att\"],value=parameters[\"value\"]).values_list(\"value\",flat=True)'\n    else:\n        query = query.filter(attributes__property_att__id=parameters['property_att'],attributes__value__contains=parameters['value'])\n        fld = 'attributes.filter(property_att__id=parameters[\"property_att\"],value__contains=parameters[\"value\"]).values_list(\"value\",flat=True)'\n    if parameters['version']:\n        query = query.select_related('computer__version').filter(computer__version__id=parameters['version'])\nquery = query.annotate(n=Count('computer'))\nproperty = Property.objects.get(pk=parameters['property_att'])\nfields = ('computer.link', fld, 'computer.version', 'user.link', 'date')\ntitles = ('computer', property.name.lower(), 'version', 'user',  'date of login')",
            "name": "Production Computers by Attributes...",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    from django import forms\n    class myForm(ParametersForm):\n        property_att = forms.ModelChoiceField(Property.objects.all())\n        version = forms.ModelChoiceField(Version.objects.all())\n        value = forms.CharField()\n        exact = forms.ChoiceField( ((False,'No'),(True,'Yes')) )\n    return myForm",
            "description": "Computer list that have a certain attribute"
        }
    },
    {
        "pk": 4,
        "model": "server.query",
        "fields": {
            "code": "from migasfree.server.models import Computer\nquery = Computer.productives.filter(software__contains=parameters['package']).order_by('datelastupdate')\nfields = ('link', 'ip', 'datelastupdate', 'hw_link')\ntitles = ('Computer', 'ip', 'last update', 'hardware')",
            "name": "Production Computers with the Package...",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    from django import forms\n    class myForm(ParametersForm):\n        package = forms.CharField()\n    return myForm\n",
            "description": "Computer list with the specified package"
        }
    },
    {
        "pk": 7,
        "model": "server.query",
        "fields": {
            "code": "from django.utils.translation import ugettext_lazy as _\nfrom datetime import datetime, timedelta, date\nfrom migasfree.server.models import Computer\nlast_days = parameters['last_days']\nif last_days <= 0 or last_days == '':\n    last_days = 1\nelse:\n    last_days = int(last_days)\ndelta = timedelta(days=1)\nn = date.today() - ((last_days - 1) * delta)\nquery = Computer.productives.select_related('version').filter(dateinput__gte=n, dateinput__lt=date.today() + delta).order_by('-dateinput')\nfields = ('link', 'version', 'dateinput', 'ip')\ntitles = (_('Computer'), _('Version'), _('date input'), _('ip'))",
            "name": "Incoming Production Computers...",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    from django import forms\n    class myForm(ParametersForm):\n        last_days = forms.CharField()\n    return myForm",
            "description": ""
        }
    }
]
