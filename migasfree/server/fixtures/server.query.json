[
    {
        "pk": 1,
        "model": "server.query",
        "fields": {
            "code": "if parameters['id'] == '':\n    query = Query.objects.all()\nelse:\n    query = Query.objects.filter(id=parameters['id'])\n    fields = ('id', 'name', 'description', 'code', 'parameters')\n",
            "name": "QUERIES",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    class myForm(ParametersForm):\n        id = forms.CharField()\n    return myForm\n",
            "description": "LIST OF QUERIES"
        }
    },
    {
        "pk": 2,
        "model": "server.query",
        "fields": {
            "code": "query = Package.objects.filter(name__contains=parameters['name'])\nfields = ('id', 'link()', 'store.name')\ntitles = ('id', 'name', 'store')\n",
            "name": "PACKAGES/SETS",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    class myForm(ParametersForm):\n        name = forms.CharField()\n    return myForm\n",
            "description": "LIST OF PACKAGES/SETS"
        }
    },
    {
        "pk": 3,
        "model": "server.query",
        "fields": {
            "code": "query = Login.objects.all()\nif parameters['value'] != '':\n    query = query.filter(attributes__property_att__id = parameters['property_att'], attributes__value__contains = parameters['value'])\n    fields = ('computer.link()', 'user.link()', 'date')\n    titles = ('computer', 'user', 'date of login')\n",
            "name": "COMPUTERS BY ATTRIBUTES",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    class myForm(ParametersForm):\n        property_att = forms.ModelChoiceField(Property.objects.all())\n        value = forms.CharField()\n    return myForm\n",
            "description": "LIST THE COMPUTERS THAT HAVE A DETERMINATE ATTRIBUTE"
        }
    },
    {
        "pk": 5,
        "model": "server.query",
        "fields": {
            "code": "query = Package.objects.version(0).filter(Q(repository__id__exact=None))\nfields = ('version.name', 'store.name', 'link()')\ntitles = ('version', 'store', 'package/set')\n",
            "name": "PACKAGE/SET ORPHAN",
            "parameters": "",
            "description": "PACKAGES/SET THAT NOT HAVE BEEN ASIGNED TO A REPOSITORY"
        }
    },
    {
        "pk": 8,
        "model": "server.query",
        "fields": {
            "code": "query = Computer.objects.all()\nif parameters['model'] != '':\n    query = query.filter(devices__model__id=parameters['model'])\n    query = query.filter(name__contains=parameters['computer'])\n    query = query.order_by('name')\n    fields = ('link()', 'devices_link()', 'login_link()')\n    titles = ('computer', 'devices', 'last login')\n",
            "name": "COMPUTER DEVICES",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    class myForm(ParametersForm):\n        model = forms.ModelChoiceField(DeviceModel.objects.all())\n        computer = forms.CharField()\n    return myForm\n",
            "description": ""
        }
    },
    {
        "pk": 9,
        "model": "server.query",
        "fields": {
            "code": "query = Device.objects.all()\nif parameters['model'] != '':\n  query = query.filter(Q(model__id=parameters['model']))\n  query = query.filter(Q(computer__name__contains=parameters['computer']))\n  query = query.order_by('name').distinct()\n  fields = ('link()', 'model.link()', 'computers_link()')\n  titles = ('device', 'model', 'computers')\n",
            "name": "DEVICE COMPUTERS",
            "parameters": "def form_params():\n    from migasfree.server.forms import ParametersForm\n    class myForm(ParametersForm):\n        model = forms.ModelChoiceField(DeviceModel.objects.all())\n        computer = forms.CharField()\n    return myForm\n",
            "description": ""
        }
    },
    {
        "pk": 10,
        "model": "server.query",
        "fields": {
            "code": "from datetime import timedelta\r\nfrom datetime import datetime\r\nfrom datetime import date\r\ndias=int(parameters['dias'])\r\ndelta = timedelta(days = 1)\r\nn = date.today()-((dias-1)*delta)\r\nquery = Computer.objects.all()\r\n\r\nquery = query.filter(dateinput__gte = n, dateinput__lt = date.today()+delta).order_by(\"dateinput\")\r\n\r\nfields = ('link()','version','dateinput','ip')\r\ntitles = ('link()','version','dateinput','ip')",
            "name": "INPUT COMPUTER",
            "parameters": "def form_params():\r\n    from migasfree.server.forms import ParametersForm\r\n    class myForm(ParametersForm):\r\n        dias = forms.CharField()\r\n    return myForm",
            "description": ""
        }
    },
    {
        "pk": 4,
        "model": "server.query",
        "fields": {
            "code": "query = Computer.objects.filter(software__contains=parameters['package']).order_by(\"datelastupdate\")\r\nfields = ('link()','ip','datelastupdate','last_login().link()')\r\ntitles = ('Computer','ip','last update','last login')",
            "name": "COMPUTERS WITH THE PACKAGE...",
            "parameters": "def form_params():\r\n    from migasfree.server.forms import ParametersForm\r\n    class myForm(ParametersForm):\r\n        package = forms.CharField()\r\n    return myForm\r\n",
            "description": "LIST THE COMPUTERS WITH THE PACKAGE ESPECIFIQUED\r\n\r\n\r\nquery = Computer.objects.filter(software__contains=parameters['package'])\r\n#fields = ('link()', 'software')\r\n#titles = ('link()', 'diff with master')\r\nfields = ('link()',)\r\ntitles = ('link()',)"
        }
    },
    {
        "pk": 7,
        "model": "server.query",
        "fields": {
            "code": "query = Login.objects.all()\r\nfields = ('computer.link()', 'computer.login_link()', 'computer.last_login().date', 'computer.last_login().user.link()')\r\ntitles = ('computer', 'last login','date', 'user')\r\n",
            "name": "LAST LOGIN",
            "parameters": "",
            "description": "LIST OF LAST LOGIN FROM COMPUTERS"
        }
    },
    {
        "pk": 6,
        "model": "server.query",
        "fields": {
            "code": "from migasfree.server.models import Repository\r\nquery = Repository.objects.filter(Q(packages__name__contains=parameters['package']))\r\nquery = query.distinct()\r\nfields = ('id', 'link()', 'packages_link()')\r\ntitles = ('id', 'Repository', 'Packages')\r\n",
            "name": "REPOSITORIES WITH A PACKAGE/SET",
            "parameters": "def form_params():\r\n    from migasfree.server.forms import ParametersForm\r\n    class myForm(ParametersForm):\r\n        package = forms.CharField()\r\n    return myForm\r\n",
            "description": "LIST THE REPOSITORIES THAT HAVE ASIGNNED A DETERMINATE PACKAGE/SET"
        }
    }
]