# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-05 08:55
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('server', '0004_4_10_hardware_resume'),
    ]

    operations = [
        migrations.AlterField(
            model_name='autocheckerror',
            name='message',
            field=models.TextField(blank=True, help_text='Pattern to search. See https://docs.python.org/2/library/re.html#module-re', null=True, verbose_name='message'),
        ),
        migrations.AlterField(
            model_name='computer',
            name='devices_logical',
            field=models.ManyToManyField(blank=True, to='server.DeviceLogical', verbose_name='logical devices'),
        ),
        migrations.RunSQL(
            [(
                "UPDATE server_pms SET createrepo=%s WHERE name='yum' OR name='zypper';",
                ["_DIR=%PATH%/%REPONAME%\nrm -rf $_DIR/repodata\nrm -rf $_DIR/checksum\ncreaterepo -c checksum $_DIR\n"]
            )],
            migrations.RunSQL.noop
        ),
        migrations.RunSQL(
            [(
                "UPDATE server_pms SET createrepo=%s WHERE name='apt-get';",
                ["_NAME=%REPONAME%\n_ARCHS=(\"i386 amd64 source\")\nfor _ARCH in ${_ARCHS[@]}\ndo\n  cd %PATH%\n  mkdir -p $_NAME/PKGS/binary-$_ARCH/\n  cd ..\n\n  dpkg-scanpackages -m dists/$_NAME/PKGS > dists/$_NAME/PKGS/binary-$_ARCH/Packages\n  gzip -9c dists/$_NAME/PKGS/binary-$_ARCH/Packages > dists/$_NAME/PKGS/binary-$_ARCH/Packages.gz\ndone\n\nfunction calculate_hash {\n  echo $1\n  _FILES=$(find  -type f | sed 's/^.\\///' | sort)\n  for _FILE in $_FILES\n  do\n    _SIZE=$(printf \"%16d\\n\" $(ls -l $_FILE | cut -d ' ' -f5))\n    _HASH=$($2 $_FILE | cut -d ' ' -f1) $()\n    echo \" $_HASH\" \"$_SIZE\" \"$_FILE\"\n  done\n}\n\nfunction create_deploy {\n  _F=\"$(mktemp /var/tmp/deploy-XXXXX)\"\n\n  rm Release 2>/dev/null || :\n  rm Release.gpg 2>/dev/null || :\n  touch Release\n  rm $_F 2>/dev/null || :\n\n  echo \"Architectures: ${_ARCHS[@]}\" > $_F\n  echo \"Codename: $_NAME\" >> $_F\n  echo \"Components: PKGS\" >> $_F\n  echo \"Date: $(date -u '+%a, %d %b %Y %H:%M:%S UTC')\" >> $_F\n  echo \"Label: migasfree $_NAME repository\" >> $_F\n  echo \"Origin: migasfree\" >> $_F\n  echo \"Suite: $_NAME\" >> $_F\n\n  calculate_hash \"MD5Sum:\" \"md5sum\" >> $_F\n  calculate_hash \"SHA1:\" \"sha1sum\" >> $_F\n  calculate_hash \"SHA256:\" \"sha256sum\" >> $_F\n  calculate_hash \"SHA512:\" \"sha512sum\" >> $_F\n\n  mv $_F Release\n\n  gpg -u migasfree-repository --homedir %KEYS%/.gnupg --clearsign -o InRelease Release\n  gpg -u migasfree-repository --homedir %KEYS%/.gnupg -abs -o Release.gpg Release\n}\n\ncd dists/$_NAME\ncreate_deploy\n"]
            )],
            migrations.RunSQL.noop
        ),
        migrations.RunSQL(
            [(
                "UPDATE server_pms SET createrepo=%s WHERE name='msi';",
                ["function add_pkg_info {\n  7za e $1 PKG-INFO >/dev/null\n  cat PKG-INFO | grep -v -e \"^.$\" >> ../Packages\n  echo \"\" >> ../Packages\n  rm PKG-INFO\n}\n\n_DIR=%PATH%/%REPONAME%\ncd  $_DIR/PKGS/\n\nrm ../Packages 2>/dev/null\nfor _FILE in $(ls *.exe)\ndo\n  add_pkg_info $_FILE\ndone\n\nrm -rf ../metadata 2>/dev/null\nls *.exe >> ../metadata\n"]
            )],
            migrations.RunSQL.noop
        ),
    ]
